

import React, { useState } from "react";
import ForkLeftOutlinedIcon from "@mui/icons-material/ForkLeftOutlined";

const TriangleContent = ({ data, schedule, index }) => {
  const [isDragging, setIsDragging] = useState(false);
  const [position, setPosition] = useState({ x: 0, y: 0 });

  const handleDragStart = (event) => {
    setIsDragging(true);
  };

  const handleDragEnd = (event) => {
    setIsDragging(false);
    setPosition({
      x: event.clientX - 25, // Adjust for center alignment
      y: event.clientY - 25,
    });
  };

  return (
    <div
      className={`diamond-node ${isDragging ? "dragging" : ""}`}
      style={{
        width: 50,
        height: 50,
        backgroundColor: "rgb(232, 151, 8)",
        transform: "rotate(45deg)",
        position: isDragging ? "fixed" : "relative",
        zIndex: isDragging ? 9999 : index, // Ensure stacking order
        left: position.x,
        top: position.y,
        cursor: isDragging ? "grabbing" : "grab",
        transition: isDragging ? "none" : "transform 0.2s ease-out",
      }}
      onMouseDown={handleDragStart}
      onMouseUp={handleDragEnd}
    >
      <div className="diamond-content">
        <ForkLeftOutlinedIcon
          style={{
            color: "white",
            transform: "rotate(180deg)",
            fontSize: 40,
          }}
        />
        {/* Top Right Label */}
        <div style={{ position: "absolute", right: "-80px", top: "0px" }}>
          <p>
            <span style={{ fontWeight: "bold" }}>
              {data.widgetData?.MidgetName}
            </span>
          </p>
        </div>

        {/* Bottom Right Label */}
        <div style={{ position: "absolute", right: "-100px", top: "15px" }}>
          Choice
        </div>
      </div>
    </div>
  );
};

export default TriangleContent;


.diamond-node {
  position: relative;
  cursor: grab;
  transition: transform 0.2s ease-out;
}

.diamond-node.dragging {
  position: fixed !important;
  z-index: 9999;
  opacity: 0.8;
  pointer-events: none;
  cursor: grabbing;
}


